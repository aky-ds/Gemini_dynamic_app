import streamlit as st
import google.generativeai as genai
from PIL import Image
from dotenv import load_dotenv
import os
import PIL
# Load API key from environment variable
load_dotenv()
genai.configure(api_key=os.getenv("GOOGLE_KEY"))

# Create the generative model object
model = genai.GenerativeModel('gemini-pro-vision')

def get_response(text, image):
  """
  Gets a response from the generative model based on text and image input.

  Args:
      text: Text input for the model.
      image: A PIL Image object.

  Returns:
      The text response generated by the model.
  """
  if text != '':
    response = model.generate_content([text, image])
  else:
    if isinstance(image, PIL.Image.Image):
      response = model.generate_content(image)
    else:
      return "Please upload an image or provide text input."
  return response.text

st.header("Gemini Pro Vision App")

text = st.text_input('Input', key='input')

button = st.button('Tell me about the image')

file_upload = st.file_uploader("Upload an image (png, jpg, jpeg)", type=['png', 'jpg', 'jpeg'])
image = None  # Initialize image variable

if file_upload is not None:
  try:
    image = Image.open(file_upload)  # Open the uploaded image
    st.image(image, caption='Image Uploaded')
  except Exception as e:
    st.error(f"Error uploading image: {e}")

if button:
  if image:
    response = get_response(text, image)
    st.header("The response is")
    st.write(response)
  else:
    st.error("Please upload an image before clicking the button.")
